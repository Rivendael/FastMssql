[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "fastmssql"
version = "0.2.8"

description = "A high-performance Python library for Microsoft SQL Server using Rust and Tiberius"
readme = "README.md"
requires-python = ">=3.8"
license = { text  = "PolyForm Noncommercial License 1.0.0" }
authors = [
    { name = "Riveranda", email = "riverb514@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/Rivendael/pymssql-rs"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "psutil>=5.9.0",  # For memory and process monitoring in stress tests
]

[tool.maturin]
module-name = "fastmssql.fastmssql"
python-source = "python"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Test markers
markers = [
    "asyncio: marks tests as async tests",
    "integration: marks tests that require a database connection",
    "performance: marks tests that measure performance characteristics", 
    "stress: marks tests that perform stress testing",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

# Logging configuration
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Test configuration
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]